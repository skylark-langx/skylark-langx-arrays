{"version":3,"sources":["pull-at.js"],"names":["define","types","objects","arrays","pullAt","array","indexes","length","result","baseAt","sort","a","b","i","slice"],"mappings":";;;;;;;AAAAA,QACE,sBACA,wBACA,YACA,SAASC,EAAMC,EAAQC,GAuCxB,OAAOA,EAAOC,OAfd,SAAgBC,KAAUC,GACA,MAATD,GAAoBA,EAAME,OAAzC,MACMC,EAASN,EAAQO,OAAOJ,EAAOC,GAErCA,EAAQI,KAAK,SAASC,EAAGC,GACxB,OAAOD,EAAIC,IAGZ,IAAK,IAAIC,EAAGP,EAAQC,OAAO,EAAEM,GAAG,EAAEA,IACjCR,EAAMS,MAAMR,EAAQO,GAAG,GAGxB,OAAOL","file":"../pull-at.js","sourcesContent":["define([\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"./arrays\"\r\n],function(types,objects,arrays){\r\n\r\n\t/**\r\n\t * Removes elements from `array` corresponding to `indexes` and returns an\r\n\t * array of removed elements.\r\n\t *\r\n\t * **Note:** Unlike `at`, this method mutates `array`.\r\n\t *\r\n\t * @category Array\r\n\t * @param {Array} array The array to modify.\r\n\t * @param {...(number|number[])} [indexes] The indexes of elements to remove.\r\n\t * @returns {Array} Returns the new array of removed elements.\r\n\t * @see pull, pullAll, pullAllBy, pullAllWith, remove, reject\r\n\t * @example\r\n\t *\r\n\t * const array = ['a', 'b', 'c', 'd']\r\n\t * const pulled = pullAt(array, [1, 3])\r\n\t *\r\n\t * console.log(array)\r\n\t * // => ['a', 'c']\r\n\t *\r\n\t * console.log(pulled)\r\n\t * // => ['b', 'd']\r\n\t */\r\n\tfunction pullAt(array, ...indexes) {\r\n\t  const length = array == null ? 0 : array.length\r\n\t  const result = objects.baseAt(array, indexes)\r\n\r\n\t  indexes.sort(function(a, b) {\r\n  \t\treturn a - b;\r\n\t  });\r\n\r\n\t  for (let i= indexes.length-1;i>=0;i--) {\r\n\t  \tarray.slice(indexes[i],1);\r\n\t  }\r\n\r\n\t  return result\r\n\t}\r\n\r\n\treturn arrays.pullAt = pullAt;\r\n});\r\n"]}