{"version":3,"sources":["map.js"],"names":["define","types","arrays","flatten","map","elements","callback","value","i","key","values","isArrayLike","length","call","push"],"mappings":";;;;;;;AAAAA,QACC,sBACE,WACA,aACD,SAASC,EAAMC,EAAOC,GAiBpB,OAAOD,EAAOE,IAhBd,SAAaC,EAAUC,GACnB,IAAIC,EACAC,EAAGC,EADIC,KAEX,GAAIT,EAAMU,YAAYN,GAClB,IAAKG,EAAI,EAAGA,EAAIH,EAASO,OAAQJ,IAEhB,OADbD,EAAQD,EAASO,KAAKR,EAASG,GAAIH,EAASG,GAAIA,KAC7BE,EAAOI,KAAKP,QAGnC,IAAKE,KAAOJ,EAEK,OADbE,EAAQD,EAASO,KAAKR,EAASI,GAAMJ,EAASI,GAAMA,KACjCC,EAAOI,KAAKP,GAEvC,OAAOJ,EAAQO","file":"../map.js","sourcesContent":["define([\r\n\t\"skylark-langx-types\",\r\n  \t\"./arrays\",\r\n  \t\"./flatten\"\r\n],function(types,arrays,flatten){\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (types.isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    return arrays.map = map;\r\n});"]}